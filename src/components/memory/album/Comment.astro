---
import type { User as UserType } from "@/interfaces/memory/user";
import UserPerfil from "./UserPerfil.astro";
import { db } from "astro:db";
import { User } from "astro:db";
import { eq } from "astro:db";

interface Props {
    commentId: string;
    userId: string;
    content: string;
    createdAt: Date;
    isTemplate?: boolean;
    className?: string;
}

const { commentId, userId, content, createdAt, isTemplate, className } =
    Astro.props as Props;

const user: UserType = await db
    .select()
    .from(User)
    .where(eq(User.id, userId))
    .then((res) => res[0]);

const dateOptions: Intl.DateTimeFormatOptions = {
    day: "2-digit",
    month: "long",
    year: "numeric",
};

const date = createdAt.toLocaleDateString("es-ES", dateOptions);
---

<div
    class={"bg-orange-50 rounded-md p-3 py-4 flex flex-col gap-2 Comment " +
        (className ?? "")}
    data-comment-id={commentId}
    style=`view-transition-class: memberCommentItem; view-transition-name: ${commentId};`
>
    <p class="commentContent">
        {content}
    </p>
    <div class="flex justify-between items-end">
        <span class="text-xs text-gray-400 commentDate">{date}</span>
        <UserPerfil className="w-fit" user={user} isTemplate={isTemplate} />
    </div>
</div>

<style>
    .commentInAnimation {
        animation: commentIn 0.3s ease-in-out;
    }

    html::view-transition-group(.memberCommentItem) {
        animation-duration: 300ms;
    }

    @keyframes commentIn {
        0% {
            opacity: 0;
            transform: translateY(10px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>
