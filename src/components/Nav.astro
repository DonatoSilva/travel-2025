---
import { firebase } from "src/firebase/config";
import Logo from "./Logo.astro";
import Modal from "./Modal.astro";
import { actions } from "astro:actions";
import Button from "./Button.astro";

const userExists = Astro.locals.userExists;
const user = firebase.auth.currentUser;

const { data: invitations, error } = await Astro.callAction(
    actions.Invited.get,
    {},
);

const invitationsData = invitations?.invitations ?? [];
const isInvited = invitationsData?.some(
    (invitation) => invitation.email === user?.email,
);
---

<div
    class="max-h-16 content flex justify-between w-full max-w-screen-2xl py-4 px-4 mx-auto"
>
    <Logo />
    <div class="flex items-center gap-4 text-xs count">
        <div
            class="flex items-center gap-2 cursor-pointer"
            onclick="document.querySelector('.modal')?.showModal()"
        >
            <span class="hidden md:block">invitados:</span>
            <span
                class="px-4 rounded-2xl text-center bg-orange-100 font-medium text-orange-600 text-2xl"
                >4</span
            >
        </div>
        {
            userExists ? (
                <button
                    class="px-4 py-2 rounded-lg bg-orange-600 text-white border border-orange-50 hover:bg-orange-50 hover:text-orange-600 transition-colors duration-300 md:flex md:flex-row md:items-center md:gap-2"
                    onclick="document.querySelector('#user-modal')?.showModal()"
                >
                    <span class="hidden md:block">Usuario</span>
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="20"
                        height="20"
                        viewBox="0 0 24 24"
                    >
                        <g>
                            <circle cx="12" cy="6" r="4" fill="currentColor" />
                            <path
                                fill="currentColor"
                                d="M20 17.5c0 2.485 0 4.5-8 4.5s-8-2.015-8-4.5S7.582 13 12 13s8 2.015 8 4.5"
                            />
                        </g>
                    </svg>
                </button>
            ) : (
                <button
                    class="px-4 py-2 rounded-lg bg-orange-600 text-white border border-orange-50 hover:bg-orange-50 hover:text-orange-600 transition-colors duration-300"
                    onclick="document.querySelector('#login-modal')?.showModal()"
                >
                    Iniciar sesión
                </button>
            )
        }
    </div>
</div>

<Modal
    id="list-modal"
    title="Invitados"
    description="Lista de invitados a la ruta por villa de leyva, Raquira y Sachica"
>
    <div class="modal-body">
        <ul class="grid grid-cols-1 md:grid-cols-2 gap-4 my-auto">
            {
                invitationsData?.map((invitation) => (
                    <li class="flex items-center gap-2 rounded-lg bg-orange-600 w-full">
                        <span class="px-4 py-2 rounded-lg font-medium bg-orange-600 text-2xl text-white">
                            {invitation.name
                                .split(" ")
                                .map((name: string, index: number) =>
                                    index % 2 == 0 ? name[0] : "",
                                )
                                .join("")
                                .toUpperCase()}
                        </span>
                        <div class="flex flex-col justify-between w-full bg-white h-full rounded-lg p-4">
                            <span class="font-medium text-lg">
                                {invitation.name}
                            </span>
                            <hr class="w-full border-orange-600" />
                            <span class="text-sm">{invitation.email}</span>
                        </div>
                    </li>
                ))
            }
        </ul>
    </div>
</Modal>

<Modal
    id="login-modal"
    title="Inicia sesión"
    description="Saludos a todos, les agradesco por participar deben iniciar sesión si desean comentar o dar likes. Si estas en la lista de invitados vas a poder hacer cosas unicas."
>
    <button
        id="login-button"
        class="px-4 py-2 rounded-lg bg-orange-600 text-white flex flex-row items-center gap-2 mx-auto my-8 border border-orange-500 hover:bg-orange-50 hover:text-orange-600 transition-colors duration-300"
    >
        <svg
            xmlns="http://www.w3.org/2000/svg"
            width="30"
            height="30"
            viewBox="0 0 48 48"
            ><path
                fill="currentColor"
                d="m34.5 7l-5 7.5c-1-.532-3-1.5-5.5-1.5c-6 0-11 5-11 10.5S17 35 24 35c5.6 0 9.5-4 9.5-7H24v-7h20c.5 7.5-1.71 11.9-4.5 15.5C35.324 41.888 29.171 44 24 44C14 44 4 36 4 23.5C4 11.5 14.724 4 23 4s11.5 3 11.5 3"
            ></path><path
                fill="currentColor"
                d="m29.5 14.5l-.939 1.766a2 2 0 0 0 2.603-.657zm5-7.5l1.664 1.11a2 2 0 0 0-.302-2.574zM44 21l1.996-.133A2 2 0 0 0 44 19zm-20 0v-2a2 2 0 0 0-2 2zm0 7h-2a2 2 0 0 0 2 2zm9.5 0h2a2 2 0 0 0-2-2zm6 8.5l-1.58-1.225zm-8.336-20.89l5-7.5l-3.328-2.22l-5 7.5zM34.5 7a150 150 0 0 0 1.36-1.466l-.001-.002l-.014-.012l-.082-.072a9 9 0 0 0-.804-.592a14 14 0 0 0-2.35-1.208C30.518 2.796 27.385 2 23 2v4c3.89 0 6.508.704 8.099 1.352a10 10 0 0 1 1.676.855a5 5 0 0 1 .385.278l-.002-.002l-.008-.007l-.006-.006l-.003-.003l-.002-.001c0-.001-.002-.002 1.361-1.466M23 2c-4.693 0-9.91 2.101-13.948 5.77C4.978 11.47 2 16.86 2 23.5h4c0-5.361 2.384-9.72 5.741-12.77C15.134 7.65 19.417 6 23 6zM2 23.5C2 37.2 12.993 46 24 46v-4c-8.993 0-18-7.2-18-18.5zM44 21v-2H24v4h20zm-22 0v7h4v-7zm2 9h9.5v-4H24zm7.5-2c0 .698-.522 1.933-1.919 3.08C28.248 32.174 26.317 33 24 33v4c3.283 0 6.102-1.173 8.119-2.829c1.953-1.602 3.381-3.868 3.381-6.17zM24 33c-5.617 0-9-4.804-9-9.5h-4C11 29.804 15.617 37 24 37zm-9-9.5c0-4.336 4.044-8.5 9-8.5v-4c-7.044 0-13 5.836-13 12.5zm9-8.5c2 0 3.645.779 4.561 1.266l1.878-3.532C29.355 12.158 26.999 11 24 11zm0 31c5.672 0 12.46-2.312 17.08-8.275l-3.16-2.45C34.188 40.089 28.67 42 24 42zm17.08-8.275c3.038-3.919 5.453-8.79 4.916-16.858l-3.992.266c.463 6.933-1.543 10.862-4.085 14.142z"
            ></path></svg
        > Iniciar sesión con Google
    </button>
</Modal>

<Modal id="user-modal" title="Perfil de usuario" description="">
    <div class="">
        <div class="relative w-24 h-24 mx-auto user-image">
            <img
                srcset={user?.photoURL}
                alt="Foto de perfil"
                class="rounded-full w-full h-full object-cover"
            />
            {
                isInvited ? (
                    <span class="absolute bg-orange-600 text-white rounded-full p-2 text-xs flex flex-row items-center verified">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                        >
                            <g
                                fill="none"
                                stroke="currentColor"
                                stroke-width="1.5"
                            >
                                <g>
                                    <circle
                                        cx="12"
                                        cy="12"
                                        r="10"
                                        opacity="0.5"
                                    />
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        d="m8.5 12.5l2 2l5-5"
                                    />
                                </g>
                            </g>
                        </svg>
                        <span class="verified-text">Invitado</span>
                    </span>
                ) : (
                    ""
                )
            }
        </div>
        <div class="mt-2">
            <p class="text-center text-2xl font-semibold">
                {user?.displayName}
            </p>
            <p class="text-center text-xs">{user?.email}</p>
        </div>
    </div>
    <Button
        id="logout-button"
        className="flex flex-row items-center my-8 mx-auto"
        >Cerrar sesión</Button
    >
</Modal>

<style>
    .content {
        display: grid;
        align-items: center;
        grid-template-columns: max-content 1fr max-content;
    }

    .nav {
        grid-column: 1 / 2;
    }

    .count {
        grid-column: 3 / 4;
    }

    .user-image {
        &:hover {
            .verified {
                @apply gap-1;
                right: 0;
                transform: translateX(50%);
                .verified-text {
                    width: 100%;
                }
            }
        }

        .verified {
            @apply gap-0;
            top: 0;
            right: 0;
            transform: translateX(40%);
            transition: all 0.3s ease-in-out;

            .verified-text {
                overflow: hidden;
                width: 0;
                transition: all 0.3s ease-in-out;
            }
        }
    }
</style>

<script>
    import { firebase } from "src/firebase/config";
    import {
        GoogleAuthProvider,
        signInWithPopup,
        signOut,
    } from "firebase/auth";

    import { actions } from "astro:actions";
    import { navigate } from "astro:transitions/client";

    const loginButton = document.querySelector(
        "#login-button",
    ) as HTMLButtonElement;

    const logoutButton = document.querySelector(
        "#logout-button",
    ) as HTMLButtonElement;

    const auth = firebase.auth;

    loginButton.addEventListener("click", async () => {
        const provider = new GoogleAuthProvider();

        provider.setCustomParameters({
            prompt: "select_account",
        });

        try {
            const result = await signInWithPopup(auth, provider);

            const { error } = await actions.Google.login(result);

            if (error) {
                alert("Ocurrio un error al iniciar sesión");
                console.error(error);
                return;
            }

            await navigate(window.location.pathname);
        } catch (error) {
            console.error(error);
        }
    });

    logoutButton.addEventListener("click", async () => {
        try {
            await signOut(auth).then(async () => {
                await actions.Google.logOut();
                await navigate("/");
            });
        } catch (error) {
            console.error(error);
        }
    });
</script>
