---
import AddMemory from "@memory/AddMemory.astro";
import Card from "@memory/album/card/Card.astro";
import ContentAlbums from "@memory/album/ContentAlbums.astro";

import Image from "astro/components/Image.astro";

import HeaderGallery from "@images/galery/header.jpg";
import { actions } from "astro:actions";
import type { AlbumPreView } from "@/interfaces";
import { firebase } from "@/firebase/config";

const user = Astro.locals.user;
const isAuthenticated = Astro.locals.isAuthenticated;
const { data, error } = await Astro.callAction(actions.Memory.getAlbums, {});
const { data: dataInvited, error: errorInvited } = await Astro.callAction(
    actions.Invited.isInvited,
    { $email: user?.email ?? "" },
);

if (error) {
    console.log(error);
}

const isInveted = dataInvited?.isInvited;

const albums: AlbumPreView[] = data!;

const albumTemplate: AlbumPreView = {
    id: "",
    description: "",
    createdAt: new Date(),
    photos: [],
    likes: 0,
    comments: 0,
    share: 0,
    user: {
        id: "",
        name: "",
        imgUrl: "",
    },
};
---

<section
    class="min-h-screen flex flex-col items-center bg-orange-50 text-black gallery pt-40 md:py-0 md:pb-28"
>
    <div class="container px-4 h-full">
        <div class="headerGallery w-full h-80 border-8 border-white rounded-xl">
            <h2>Memorias</h2>
            <Image
                src={HeaderGallery}
                alt="Casa invertida"
                class="w-full h-full object-cover"
            />
            <p class="absolute bottom-8 right-12 text-white">
                Mejores momentos - 2025
            </p>
        </div>
        <ContentAlbums>
            {
                isAuthenticated && isInveted ? (
                    <AddMemory />
                ) : (
                    <div class="col-span-full flex flex-col md:flex-row items-center justify-between p-6 bg-orange-100 rounded-lg space-y-4 border-2 border-orange-200 border-dashed gap-8">
                        <div class="flex flex-col justify-center">
                            <h3 class="text-2xl text-center md:text-left font-bold text-orange-500">
                                Â¡Hola viajero!
                            </h3>
                            <p class="text-gray-600">
                                Â¿Quieres compartir tus increÃ­bles momentos? ðŸŒŸ
                            </p>
                        </div>
                        <div class="flex flex-col justify-center gap-4">
                            <button
                                onclick="document.querySelector('#login-modal')?.showModal()"
                                class="inline-flex items-center px-6 py-3 bg-orange-500 text-white rounded-full hover:bg-orange-600 transition-colors"
                            >
                                <span class="mr-2">ðŸŽ‰</span>
                                Â¡Inicia sesiÃ³n y Ãºnete a la diversiÃ³n!
                            </button>
                            <div class="text-2xl text-center md:text-3xl transition-all duration-200">
                                ðŸ‘‹ âœ¨
                            </div>
                        </div>
                    </div>
                )
            }
            {
                albums?.length == 0 ? (
                    <div
                        class={
                            `${!isAuthenticated ? "lg:col-span-full" : "lg:col-span-1"}` +
                            " text-center flex flex-col justify-center items-center h-full col-span-full md:col-span-2  text-gray-400  min-h-60 "
                        }
                        id="noAlbumsMessage"
                    >
                        <p class="text-2xl font-bold  mx-auto  ">
                            No hay albums
                        </p>
                        <span>
                            Se el primero en mostrar a los demas cual fue tu
                            mejor memento
                        </span>
                    </div>
                ) : (
                    albums.map((albumData) => (
                        <Card id={albumData.id} album={albumData} />
                    ))
                )
            }
        </ContentAlbums>
    </div>
</section>

<template id="templateCardAlbum">
    <Card id="" album={albumTemplate} isTemplate={true} />
</template>

<style>
    .gallery {
        .headerGallery {
            position: relative;
            overflow: hidden;

            &::after {
                content: "";
                @apply rounded-lg;
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: linear-gradient(
                    to bottom,
                    rgba(0, 0, 0, 0),
                    rgba(0, 0, 0, 0.6)
                );
                pointer-events: none;
            }

            h2 {
                position: absolute;
                top: 0px;
                left: 0px;
                @apply text-white py-2 px-4 bg-orange-500 rounded-ee-xl;
                font-size: max(1.5rem, 3rem);
                font-weight: bold;
                z-index: 13;
            }

            img {
                transition: transform 0.5s ease-in-out;
                &:hover {
                    transform: scale(1.05);
                }
            }

            p {
                @apply text-white text-2xl font-bold pe-2;
                width: 0;
                max-width: fit-content;
                z-index: 10;
                overflow: hidden;
                white-space: nowrap;
                animation: typing 6s steps(52) infinite alternate forwards;
                animation-delay: 2s;

                &::after {
                    content: "";
                    position: absolute;
                    top: 0;
                    right: 0;
                    width: 2px;
                    height: 100%;

                    border-right: 2px solid white;
                    animation: caret 1s infinite;
                }
            }
        }
    }
</style>

<script>
    import { navigate } from "astro:transitions/client";
    import Swiper from "swiper";
    import { Navigation, Pagination } from "swiper/modules";
    // import Swiper and modules styles
    import "swiper/css";
    import "swiper/css/navigation";
    import "swiper/css/pagination";

    class CardAlbum extends HTMLElement {
        constructor() {
            super();
            const swiper = new Swiper(".mySwiper", {
                modules: [Navigation, Pagination],

                pagination: {
                    el: ".swiper-pagination",
                    type: "fraction",
                },

                navigation: {
                    nextEl: ".swiper-button-next",
                    prevEl: ".swiper-button-prev",
                },
            });
            const aElement = this.querySelector("a") as HTMLAnchorElement;
            const next = this.querySelector(".swiper-button-next");
            const prev = this.querySelector(".swiper-button-prev");
            const albumText = this.querySelector(".card-Album-text");
            const albumFooter = this.querySelector(".card-Album-footer");

            const noClickElements = [next, prev, albumText, albumFooter];

            aElement.addEventListener("click", (e) => {
                e.preventDefault();

                if (
                    noClickElements.some((elem) =>
                        elem?.contains(e.target as Element),
                    )
                )
                    return;

                navigate(aElement.href);
            });
        }
    }

    customElements.define("card-album", CardAlbum);
</script>
